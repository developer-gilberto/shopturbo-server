// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
    provider = "prisma-client-js"
    // output   = "../src/generated/prisma"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id        Int      @id @default(autoincrement())
    name      String
    email     String   @unique
    password  String
    createdAt DateTime @default(now()) @map("created_at")
    updatedAt DateTime @updatedAt @map("updated_at")
    Shop      Shop[]

    @@map("users")
}

model Shop {
    id                Int                @id @default(autoincrement())
    userId            Int                @map("user_id") // FK
    name              String?
    createdAt         DateTime           @default(now()) @map("created_at")
    updatedAt         DateTime           @updatedAt @map("updated_at")
    ShopeeAccessToken ShopeeAccessToken?

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@map("shops")
}

model ShopeeAccessToken {
    id           Int      @id @default(autoincrement())
    shopId       Int      @unique @map("shop_id") // FK
    refreshToken String   @unique @map("refresh_token")
    accessToken  String   @map("access_token")
    expireIn     Int      @map("expire_in")
    createdAt    DateTime @default(now()) @map("created_at")
    updatedAt    DateTime @updatedAt @map("updated_at")

    shop Shop @relation(fields: [shopId], references: [id], onDelete: Cascade)

    @@map("shopee_access_tokens")
}
